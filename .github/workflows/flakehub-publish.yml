name: Publish to FlakeHub

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags
  workflow_dispatch:  # Allow manual trigger

permissions:
  id-token: write
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Setup Cachix
        uses: cachix/cachix-action@v15
        with:
          name: fluo
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush: false

      - name: Verify flake
        run: |
          echo "üîç Verifying flake structure..."
          nix flake check --print-build-logs

      - name: Build all packages
        run: |
          echo "üî® Building all FLUO packages..."
          nix build .#all --print-build-logs

      - name: Publish to FlakeHub
        uses: DeterminateSystems/flakehub-push@main
        with:
          visibility: public
          name: betracehq/fluo
          tag: ${{ github.ref_name }}
          rolling: true
          rolling-minor: true

      - name: Create GitHub Release Notes
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          body: |
            ## FLUO Published to FlakeHub

            **FlakeHub:** https://flakehub.com/flake/betracehq/fluo

            ### Nix Installation

            ```bash
            # Add to your flake.nix
            inputs.fluo.url = "https://flakehub.com/f/betracehq/fluo/${{ github.ref_name }}.tar.gz";

            # Or use latest
            inputs.fluo.url = "https://flakehub.com/f/betracehq/fluo/*.tar.gz";
            ```

            ### Packages Available

            - `fluo.packages.<system>.backend` - Go backend API
            - `fluo.packages.<system>.frontend` - React frontend (BFF)
            - `fluo.packages.<system>.grafana-plugin` - BeTrace Grafana app plugin

            ### Development

            ```bash
            # Clone and develop
            git clone https://github.com/betracehq/fluo
            cd fluo
            nix run .#dev
            ```

            See [README](https://github.com/betracehq/fluo/blob/main/README.md) for full documentation.
