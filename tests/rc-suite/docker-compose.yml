version: '3.8'

# BeTrace RC Test Suite - Full Stack
# Isolated test environment with all services

services:
  # Tempo - Distributed tracing backend
  tempo:
    image: grafana/tempo:2.6.1
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./config/tempo.yaml:/etc/tempo.yaml
      - tempo-data:/var/tempo
    ports:
      - "3200:3200"   # Tempo HTTP
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3200/ready"]
      interval: 5s
      timeout: 3s
      retries: 10

  # Loki - Log aggregation (for backend logs)
  loki:
    image: grafana/loki:3.3.2
    command: ["-config.file=/etc/loki.yaml"]
    volumes:
      - ./config/loki.yaml:/etc/loki.yaml
      - loki-data:/loki
    ports:
      - "3100:3100"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3100/ready"]
      interval: 5s
      timeout: 3s
      retries: 10

  # Prometheus - Metrics
  prometheus:
    image: prom/prometheus:v3.0.1
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/ready"]
      interval: 5s
      timeout: 3s
      retries: 10

  # Alloy - OpenTelemetry pipeline
  alloy:
    image: grafana/alloy:v1.5.1
    command: ["run", "/etc/alloy/config.alloy", "--server.http.listen-addr=0.0.0.0:12345"]
    volumes:
      - ./config/alloy.river:/etc/alloy/config.alloy
    ports:
      - "12345:12345"  # Alloy HTTP
      - "4319:4317"    # OTLP gRPC (forwarded to Tempo)
      - "4320:4318"    # OTLP HTTP (forwarded to Tempo)
    depends_on:
      tempo:
        condition: service_healthy
      loki:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:12345/ready"]
      interval: 5s
      timeout: 3s
      retries: 10

  # BeTrace Backend
  betrace-backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile.test
    environment:
      - BETRACE_HTTP_PORT=12011
      - BETRACE_GRPC_PORT=12012
      - BETRACE_OTEL_ENDPOINT=http://alloy:4317
      - BETRACE_LOG_LEVEL=debug
    ports:
      - "12011:12011"  # HTTP API
      - "12012:12012"  # gRPC API
    depends_on:
      alloy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:12011/health"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - ./fixtures:/test-fixtures:ro

  # Grafana with BeTrace plugin
  grafana:
    image: grafana/grafana:11.4.0
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=betrace-app
      - GF_LOG_LEVEL=debug
    volumes:
      - ../../grafana-betrace-app:/var/lib/grafana/plugins/betrace-app:ro
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana-data:/var/lib/grafana
    ports:
      - "12015:3000"
    depends_on:
      betrace-backend:
        condition: service_healthy
      tempo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  tempo-data:
  loki-data:
  prometheus-data:
  grafana-data:

networks:
  default:
    name: betrace-rc-test
