## Flox Environment Manifest -----------------------------------------
##
##   _Everything_ you need to know about the _manifest_ is here:
##
##               https://flox.dev/docs/concepts/manifest
##
## -------------------------------------------------------------------
# Flox manifest version managed by Flox CLI
version = 1


## Install Packages --------------------------------------------------
##  $ flox install gum  <- puts a package in [install] section below
##  $ flox search gum   <- search for a package
##  $ flox show gum     <- show all versions of a package
## -------------------------------------------------------------------
[install]
nodejs_20.pkg-path = "nodejs_20"
go_1_22.pkg-path = "go_1_22"
git.pkg-path = "git"
curl.pkg-path = "curl"
jq.pkg-path = "jq"
gum.pkg-path = "gum"
fswatch.pkg-path = "fswatch"
bc.pkg-path = "bc"
gopls.pkg-path = "gopls"
gotools.pkg-path = "gotools"
go-tools.pkg-path = "go-tools"
golangci-lint.pkg-path = "golangci-lint"
delve.pkg-path = "delve"
duckdb.pkg-path = "duckdb"
process-compose.pkg-path = "process-compose"
caddy.pkg-path = "caddy"
# Observability stack
grafana.pkg-path = "grafana"
grafana-loki.pkg-path = "grafana-loki"
tempo.pkg-path = "tempo"
prometheus.pkg-path = "prometheus"

# Separate package group for potential conflicts
pyroscope.pkg-path = "pyroscope"
pyroscope.pkg-group = "observability-extras"

alloy.pkg-path = "grafana-alloy"
alloy.pkg-group = "observability-extras"


## Environment Variables ---------------------------------------------
##  ... available for use in the activated environment
##      as well as [hook], [profile] scripts and [services] below.
## -------------------------------------------------------------------
[vars]
# Port configuration
BETRACE_PORT_CADDY = "3000"
BETRACE_PORT_FRONTEND = "12010"
BETRACE_PORT_BACKEND = "12011"
BETRACE_PORT_PROCESS_UI = "12013"
BETRACE_PORT_GRAFANA = "12015"
BETRACE_PORT_MCP_SERVER = "12016"

# Observability ports
BETRACE_PORT_PROMETHEUS = "9090"
BETRACE_PORT_LOKI = "3100"
BETRACE_PORT_LOKI_GRPC = "9096"
BETRACE_PORT_OTEL_GRPC = "4317"
BETRACE_PORT_OTEL_HTTP = "4318"
BETRACE_PORT_TEMPO = "3200"
BETRACE_PORT_TEMPO_GRPC = "9097"
BETRACE_PORT_PYROSCOPE = "3210"
BETRACE_PORT_PYROSCOPE_GRPC = "9105"

# Test coverage thresholds
BETRACE_COVERAGE_INSTRUCTION_MIN = "90"
BETRACE_COVERAGE_BRANCH_MIN = "80"

# Go build configuration
GOFLAGS = "-mod=vendor"
CGO_ENABLED = "1"


## Activation Hook ---------------------------------------------------
##  ... run by _bash_ shell when you run 'flox activate'.
## -------------------------------------------------------------------
[hook]
on-activate = '''
  echo "🎯 BeTrace Development Environment"
  echo "=================================="
  echo ""
  echo "📁 Applications:"
  echo "  bff/         - React Frontend (Tanstack ecosystem)"
  echo "  backend-go/  - Go Backend (DuckDB + OTEL)"
  echo ""
  echo "🚀 Start Observability Stack:"
  echo "  flox services start"
  echo "  # Services: Loki, Tempo, Prometheus, Pyroscope, Alloy, Grafana"
  echo "  # Access Grafana: http://localhost:12015 (admin/admin)"
  echo "  # All configs generated from Nix expressions"
  echo ""
  echo "🔨 Development:"
  echo "  cd bff && npm run dev              - Frontend dev server"
  echo "  cd backend-go && go run ./cmd/betrace-backend - Backend dev"
  echo ""
  echo "🧪 Testing:"
  echo "  test-runner     - Run all tests"
  echo "  test-watch      - Continuous testing"
  echo "  serve-coverage  - View coverage reports"
  echo ""
  echo "💡 Tip: Keep this shell open to keep services running!"
  echo ""
'''


## Profile script ----------------------------------------------------
## ... sourced by _your shell_ when you run 'flox activate'.
## -------------------------------------------------------------------
[profile]
# common = '''
#   gum style \
#   --foreground 212 --border-foreground 212 --border double \
#   --align center --width 50 --margin "1 2" --padding "2 4" \
#     $INTRO_MESSAGE
# '''
## Shell specific profiles go here:
# bash = ...
# zsh  = ...
# fish = ...


## Services ----------------------------------------------------------
##  $ flox services start             <- Starts all services
##  $ flox services status            <- Status of running services
##  $ flox activate --start-services  <- Activates & starts all
## -------------------------------------------------------------------
[services]

[services.loki]
command = "cd $FLOX_ENV_PROJECT && exec nix run ./.flox/pkgs#loki-wrapped"

[services.tempo]
command = "cd $FLOX_ENV_PROJECT && exec nix run ./.flox/pkgs#tempo-wrapped"

[services.prometheus]
command = "cd $FLOX_ENV_PROJECT && exec nix run ./.flox/pkgs#prometheus-wrapped"

[services.pyroscope]
command = "cd $FLOX_ENV_PROJECT && exec nix run ./.flox/pkgs#pyroscope-wrapped"

[services.alloy]
command = "cd $FLOX_ENV_PROJECT && exec nix run ./.flox/pkgs#alloy-wrapped"

[services.grafana]
command = """
  cd $FLOX_ENV_PROJECT && \
  echo "🎨 Starting Grafana with BeTrace plugin..." && \
  exec nix run ./.flox/pkgs#grafana-wrapped
"""

[services.backend]
command = """
  cd $FLOX_ENV_PROJECT/backend && \
  export CGO_ENABLED=1 && \
  export GOFLAGS="-mod=vendor" && \
  export PORT=12011 && \
  echo "🚀 Starting BeTrace backend on port 12011..." && \
  exec go run ./cmd/betrace-backend
"""

[services.storybook]
command = """
  cd $FLOX_ENV_PROJECT/grafana-betrace-app && \
  npm run storybook
"""

## Include ----------------------------------------------------------
## ... environments to create a composed environment
## ------------------------------------------------------------------
[include]
# environments = [
#     { dir = "../common" }
# ]


## Other Environment Options -----------------------------------------
[options]
# Systems that environment is compatible with
systems = [
  "aarch64-darwin",
  "aarch64-linux",
  "x86_64-darwin",
  "x86_64-linux",
]
# Uncomment to disable CUDA detection.
# cuda-detection = false
