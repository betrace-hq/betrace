{
  "name": "01 - AI Blog Post Generator (with Human Approval)",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * 1"
            }
          ]
        }
      },
      "id": "cron-trigger",
      "name": "Weekly Trigger (Monday 9am)",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "url": "http://localhost:11434/api/generate",
        "method": "POST",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"llama3.1:8b\",\n  \"prompt\": \"Generate 5 blog post ideas for FLUO (behavioral assurance system for OpenTelemetry).\\n\\nTarget audience: SREs, DevOps engineers\\nFocus: Incident prevention, trace pattern matching, compliance\\nSEO keywords: 'opentelemetry', 'behavioral assurance', 'trace patterns'\\n\\nFor each idea provide:\\n1. Title (60-70 chars, keyword-optimized)\\n2. Target keyword\\n3. One-sentence hook\\n\\nFormat as numbered list.\",\n  \"stream\": false\n}",
        "options": {}
      },
      "id": "generate-topics",
      "name": "Ollama: Generate 5 Topics",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "jsCode": "// Extract first topic from Ollama response\nconst response = $input.item.json.response;\nconst lines = response.split('\\n').filter(line => line.trim());\nconst firstTopic = lines[0];\n\nreturn {\n  json: {\n    topic: firstTopic,\n    allTopics: lines\n  }\n};"
      },
      "id": "select-topic",
      "name": "Select First Topic",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 300]
    },
    {
      "parameters": {
        "url": "http://localhost:11434/api/generate",
        "method": "POST",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"llama3.1:8b\",\n  \"prompt\": \"Write a 1,500-word technical blog post for FLUO (behavioral assurance for OpenTelemetry).\\n\\nTopic: {{ $json.topic }}\\n\\nTarget audience: SREs dealing with microservices incidents\\nTone: Technical, honest, helpful (not salesy)\\n\\nStructure:\\n- Hook: Real incident scenario (relatable, specific)\\n- Problem: Why existing tools (APM) don't solve this\\n- Solution: How FLUO detects this pattern with DSL rules\\n- Implementation: Step-by-step with code examples\\n- Results: Quantified improvement (MTTR, incidents prevented)\\n\\nInclude:\\n- FLUO DSL rule examples (proper syntax)\\n- OpenTelemetry span structure\\n- Real-world metrics\\n\\nCTA: 'Try FLUO: github.com/fluohq/fluo'\\n\\nFormat as markdown with proper headings.\",\n  \"stream\": false\n}",
        "options": {}
      },
      "id": "generate-blog-post",
      "name": "Ollama: Generate Blog Post",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "jsCode": "// Format blog post with frontmatter\nconst response = $input.item.json.response;\nconst topic = $input.item.json.topic;\nconst date = new Date().toISOString().split('T')[0];\n\n// Create filename from topic\nconst filename = topic\n  .toLowerCase()\n  .replace(/[^a-z0-9]+/g, '-')\n  .replace(/^-|-$/g, '')\n  .substring(0, 60);\n\nconst frontmatter = `---\ntitle: \"${topic}\"\ndate: ${date}\nauthor: FLUO Team\ntags: [opentelemetry, behavioral-assurance, sre]\ndraft: true\n---\n\n`;\n\nconst fullPost = frontmatter + response;\n\nreturn {\n  json: {\n    filename: `${date}-${filename}.md`,\n    content: fullPost,\n    topic: topic\n  }\n};"
      },
      "id": "format-post",
      "name": "Format with Frontmatter",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "operation": "create",
        "owner": "={{ $env.GITHUB_REPO.split('/')[0] }}",
        "repository": "={{ $env.GITHUB_REPO.split('/')[1] }}",
        "filePath": "=blog/posts/{{ $json.filename }}",
        "fileContent": "={{ $json.content }}",
        "commitMessage": "=feat(blog): add draft post on {{ $json.topic }}",
        "branch": "=blog/{{ $json.filename.replace('.md', '') }}",
        "additionalParameters": {}
      },
      "id": "create-github-pr",
      "name": "GitHub: Create Branch & File",
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [1250, 300],
      "credentials": {
        "githubApi": {
          "id": "1",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "operation": "create",
        "owner": "={{ $env.GITHUB_REPO.split('/')[0] }}",
        "repository": "={{ $env.GITHUB_REPO.split('/')[1] }}",
        "title": "=Blog Draft: {{ $json.topic }}",
        "body": "=## AI-Generated Blog Post Draft\\n\\n**Topic:** {{ $json.topic }}\\n**Model:** llama3.1:8b\\n**Generated:** {{ $now.toISO() }}\\n\\n---\\n\\n### Human Review Required\\n\\nThis blog post was generated by Ollama (llama3.1:8b) and requires human review before publishing.\\n\\n**Review Checklist:**\\n- [ ] Technical accuracy (8/10 minimum)\\n- [ ] Tone is helpful, not salesy\\n- [ ] Code examples are correct\\n- [ ] No hallucinations or false claims\\n- [ ] FLUO DSL syntax is valid\\n- [ ] Structure is clear and logical\\n\\n**Actions:**\\n- Approve: Merge this PR to publish\\n- Edit: Make changes directly in this PR\\n- Reject: Close PR with comment\\n\\n---\\n\\n### Preview\\n\\nSee full post in: `blog/posts/{{ $json.filename }}`\",\n        "base": "main",\n        "head": "=blog/{{ $json.filename.replace('.md', '') }}",
        "additionalParameters": {}
      },
      "id": "create-pr",
      "name": "GitHub: Create PR (Human Approval)",
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [1450, 300],
      "credentials": {
        "githubApi": {
          "id": "1",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $env.SLACK_WEBHOOK_URL }}",
        "method": "POST",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"text\": \"New blog post draft ready for review!\",\n  \"blocks\": [\n    {\n      \"type\": \"header\",\n      \"text\": {\n        \"type\": \"plain_text\",\n        \"text\": \"Blog Draft: {{ $json.topic }}\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*AI-generated blog post ready for human review*\\n\\n*Model:* llama3.1:8b\\n*Generated:* {{ $now.toISO() }}\"\n      }\n    },\n    {\n      \"type\": \"actions\",\n      \"elements\": [\n        {\n          \"type\": \"button\",\n          \"text\": {\n            \"type\": \"plain_text\",\n            \"text\": \"Review PR\"\n          },\n          \"url\": \"{{ $json.html_url }}\",\n          \"style\": \"primary\"\n        }\n      ]\n    }\n  ]\n}",
        "options": {}
      },
      "id": "notify-slack",
      "name": "Slack: Notify Team",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1650, 300]
    }
  ],
  "connections": {
    "Weekly Trigger (Monday 9am)": {
      "main": [
        [
          {
            "node": "Ollama: Generate 5 Topics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama: Generate 5 Topics": {
      "main": [
        [
          {
            "node": "Select First Topic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select First Topic": {
      "main": [
        [
          {
            "node": "Ollama: Generate Blog Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama: Generate Blog Post": {
      "main": [
        [
          {
            "node": "Format with Frontmatter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format with Frontmatter": {
      "main": [
        [
          {
            "node": "GitHub: Create Branch & File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub: Create Branch & File": {
      "main": [
        [
          {
            "node": "GitHub: Create PR (Human Approval)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub: Create PR (Human Approval)": {
      "main": [
        [
          {
            "node": "Slack: Notify Team",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-10-12T00:00:00.000Z",
  "versionId": "1"
}
