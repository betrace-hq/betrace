syntax = "proto3";

package betrace.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/betracehq/betrace/backend/generated/betrace/v1;betrace";

// RuleService manages BeTrace DSL rules
service RuleService {
  // ListRules returns all rules with optional filtering
  rpc ListRules(ListRulesRequest) returns (ListRulesResponse) {
    option (google.api.http) = {
      get: "/v1/rules"
    };
  }

  // GetRule returns a single rule by ID
  rpc GetRule(GetRuleRequest) returns (Rule) {
    option (google.api.http) = {
      get: "/v1/rules/{id}"
    };
  }

  // CreateRule creates a new rule
  rpc CreateRule(CreateRuleRequest) returns (Rule) {
    option (google.api.http) = {
      post: "/v1/rules"
      body: "*"
    };
  }

  // UpdateRule updates an existing rule
  rpc UpdateRule(UpdateRuleRequest) returns (Rule) {
    option (google.api.http) = {
      put: "/v1/rules/{id}"
      body: "*"
    };
  }

  // DeleteRule deletes a rule
  rpc DeleteRule(DeleteRuleRequest) returns (DeleteRuleResponse) {
    option (google.api.http) = {
      delete: "/v1/rules/{id}"
    };
  }

  // EnableRule enables a disabled rule
  rpc EnableRule(EnableRuleRequest) returns (Rule) {
    option (google.api.http) = {
      post: "/v1/rules/{id}/enable"
    };
  }

  // DisableRule disables an enabled rule
  rpc DisableRule(DisableRuleRequest) returns (Rule) {
    option (google.api.http) = {
      post: "/v1/rules/{id}/disable"
    };
  }
}

message Rule {
  string id = 1;
  string name = 2;
  string description = 3;
  string expression = 4;
  bool enabled = 5;
  string severity = 6;
  repeated string tags = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

message ListRulesRequest {
  bool enabled_only = 1;
  string severity = 2;
  repeated string tags = 3;
}

message ListRulesResponse {
  repeated Rule rules = 1;
  int32 total_count = 2;
}

message GetRuleRequest {
  string id = 1;
}

message CreateRuleRequest {
  string name = 1;
  string description = 2;
  string expression = 3;
  bool enabled = 4;
  string severity = 5;
  repeated string tags = 6;
}

message UpdateRuleRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  string expression = 4;
  bool enabled = 5;
  string severity = 6;
  repeated string tags = 7;
}

message DeleteRuleRequest {
  string id = 1;
}

message DeleteRuleResponse {
  bool success = 1;
}

message EnableRuleRequest {
  string id = 1;
}

message DisableRuleRequest {
  string id = 1;
}
