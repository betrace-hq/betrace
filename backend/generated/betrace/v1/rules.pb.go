// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: betrace/v1/rules.proto

package betrace

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Rule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Expression    string                 `protobuf:"bytes,4,opt,name=expression,proto3" json:"expression,omitempty"`
	Enabled       bool                   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Severity      string                 `protobuf:"bytes,6,opt,name=severity,proto3" json:"severity,omitempty"`
	Tags          []string               `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_betrace_v1_rules_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_betrace_v1_rules_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_betrace_v1_rules_proto_rawDescGZIP(), []int{0}
}

func (x *Rule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Rule) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Rule) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *Rule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Rule) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *Rule) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Rule) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Rule) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListRulesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EnabledOnly   bool                   `protobuf:"varint,1,opt,name=enabled_only,json=enabledOnly,proto3" json:"enabled_only,omitempty"`
	Severity      string                 `protobuf:"bytes,2,opt,name=severity,proto3" json:"severity,omitempty"`
	Tags          []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRulesRequest) Reset() {
	*x = ListRulesRequest{}
	mi := &file_betrace_v1_rules_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRulesRequest) ProtoMessage() {}

func (x *ListRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_betrace_v1_rules_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRulesRequest.ProtoReflect.Descriptor instead.
func (*ListRulesRequest) Descriptor() ([]byte, []int) {
	return file_betrace_v1_rules_proto_rawDescGZIP(), []int{1}
}

func (x *ListRulesRequest) GetEnabledOnly() bool {
	if x != nil {
		return x.EnabledOnly
	}
	return false
}

func (x *ListRulesRequest) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *ListRulesRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ListRulesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rules         []*Rule                `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRulesResponse) Reset() {
	*x = ListRulesResponse{}
	mi := &file_betrace_v1_rules_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRulesResponse) ProtoMessage() {}

func (x *ListRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_betrace_v1_rules_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRulesResponse.ProtoReflect.Descriptor instead.
func (*ListRulesResponse) Descriptor() ([]byte, []int) {
	return file_betrace_v1_rules_proto_rawDescGZIP(), []int{2}
}

func (x *ListRulesResponse) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ListRulesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRuleRequest) Reset() {
	*x = GetRuleRequest{}
	mi := &file_betrace_v1_rules_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleRequest) ProtoMessage() {}

func (x *GetRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_betrace_v1_rules_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleRequest.ProtoReflect.Descriptor instead.
func (*GetRuleRequest) Descriptor() ([]byte, []int) {
	return file_betrace_v1_rules_proto_rawDescGZIP(), []int{3}
}

func (x *GetRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Expression    string                 `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
	Enabled       bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Severity      string                 `protobuf:"bytes,5,opt,name=severity,proto3" json:"severity,omitempty"`
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRuleRequest) Reset() {
	*x = CreateRuleRequest{}
	mi := &file_betrace_v1_rules_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleRequest) ProtoMessage() {}

func (x *CreateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_betrace_v1_rules_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateRuleRequest) Descriptor() ([]byte, []int) {
	return file_betrace_v1_rules_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRuleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRuleRequest) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *CreateRuleRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CreateRuleRequest) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *CreateRuleRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdateRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Expression    string                 `protobuf:"bytes,4,opt,name=expression,proto3" json:"expression,omitempty"`
	Enabled       bool                   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Severity      string                 `protobuf:"bytes,6,opt,name=severity,proto3" json:"severity,omitempty"`
	Tags          []string               `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRuleRequest) Reset() {
	*x = UpdateRuleRequest{}
	mi := &file_betrace_v1_rules_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleRequest) ProtoMessage() {}

func (x *UpdateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_betrace_v1_rules_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRuleRequest) Descriptor() ([]byte, []int) {
	return file_betrace_v1_rules_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRuleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateRuleRequest) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *UpdateRuleRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdateRuleRequest) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *UpdateRuleRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type DeleteRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRuleRequest) Reset() {
	*x = DeleteRuleRequest{}
	mi := &file_betrace_v1_rules_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleRequest) ProtoMessage() {}

func (x *DeleteRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_betrace_v1_rules_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRuleRequest) Descriptor() ([]byte, []int) {
	return file_betrace_v1_rules_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRuleResponse) Reset() {
	*x = DeleteRuleResponse{}
	mi := &file_betrace_v1_rules_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleResponse) ProtoMessage() {}

func (x *DeleteRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_betrace_v1_rules_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRuleResponse) Descriptor() ([]byte, []int) {
	return file_betrace_v1_rules_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type EnableRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableRuleRequest) Reset() {
	*x = EnableRuleRequest{}
	mi := &file_betrace_v1_rules_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableRuleRequest) ProtoMessage() {}

func (x *EnableRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_betrace_v1_rules_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableRuleRequest.ProtoReflect.Descriptor instead.
func (*EnableRuleRequest) Descriptor() ([]byte, []int) {
	return file_betrace_v1_rules_proto_rawDescGZIP(), []int{8}
}

func (x *EnableRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DisableRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableRuleRequest) Reset() {
	*x = DisableRuleRequest{}
	mi := &file_betrace_v1_rules_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableRuleRequest) ProtoMessage() {}

func (x *DisableRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_betrace_v1_rules_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableRuleRequest.ProtoReflect.Descriptor instead.
func (*DisableRuleRequest) Descriptor() ([]byte, []int) {
	return file_betrace_v1_rules_proto_rawDescGZIP(), []int{9}
}

func (x *DisableRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_betrace_v1_rules_proto protoreflect.FileDescriptor

const file_betrace_v1_rules_proto_rawDesc = "" +
	"\n" +
	"\x16betrace/v1/rules.proto\x12\n" +
	"betrace.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xac\x02\n" +
	"\x04Rule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"expression\x18\x04 \x01(\tR\n" +
	"expression\x12\x18\n" +
	"\aenabled\x18\x05 \x01(\bR\aenabled\x12\x1a\n" +
	"\bseverity\x18\x06 \x01(\tR\bseverity\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"e\n" +
	"\x10ListRulesRequest\x12!\n" +
	"\fenabled_only\x18\x01 \x01(\bR\venabledOnly\x12\x1a\n" +
	"\bseverity\x18\x02 \x01(\tR\bseverity\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\"\\\n" +
	"\x11ListRulesResponse\x12&\n" +
	"\x05rules\x18\x01 \x03(\v2\x10.betrace.v1.RuleR\x05rules\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\" \n" +
	"\x0eGetRuleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xb3\x01\n" +
	"\x11CreateRuleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"expression\x18\x03 \x01(\tR\n" +
	"expression\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\x12\x1a\n" +
	"\bseverity\x18\x05 \x01(\tR\bseverity\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\"\xc3\x01\n" +
	"\x11UpdateRuleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"expression\x18\x04 \x01(\tR\n" +
	"expression\x12\x18\n" +
	"\aenabled\x18\x05 \x01(\bR\aenabled\x12\x1a\n" +
	"\bseverity\x18\x06 \x01(\tR\bseverity\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\"#\n" +
	"\x11DeleteRuleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\".\n" +
	"\x12DeleteRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"#\n" +
	"\x11EnableRuleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"$\n" +
	"\x12DisableRuleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id2\x8e\x05\n" +
	"\vRuleService\x12[\n" +
	"\tListRules\x12\x1c.betrace.v1.ListRulesRequest\x1a\x1d.betrace.v1.ListRulesResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/v1/rules\x12O\n" +
	"\aGetRule\x12\x1a.betrace.v1.GetRuleRequest\x1a\x10.betrace.v1.Rule\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/rules/{id}\x12S\n" +
	"\n" +
	"CreateRule\x12\x1d.betrace.v1.CreateRuleRequest\x1a\x10.betrace.v1.Rule\"\x14\x82\xd3\xe4\x93\x02\x0e:\x01*\"\t/v1/rules\x12X\n" +
	"\n" +
	"UpdateRule\x12\x1d.betrace.v1.UpdateRuleRequest\x1a\x10.betrace.v1.Rule\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\x1a\x0e/v1/rules/{id}\x12c\n" +
	"\n" +
	"DeleteRule\x12\x1d.betrace.v1.DeleteRuleRequest\x1a\x1e.betrace.v1.DeleteRuleResponse\"\x16\x82\xd3\xe4\x93\x02\x10*\x0e/v1/rules/{id}\x12\\\n" +
	"\n" +
	"EnableRule\x12\x1d.betrace.v1.EnableRuleRequest\x1a\x10.betrace.v1.Rule\"\x1d\x82\xd3\xe4\x93\x02\x17\"\x15/v1/rules/{id}/enable\x12_\n" +
	"\vDisableRule\x12\x1e.betrace.v1.DisableRuleRequest\x1a\x10.betrace.v1.Rule\"\x1e\x82\xd3\xe4\x93\x02\x18\"\x16/v1/rules/{id}/disableBCZAgithub.com/betracehq/betrace/backend/generated/betrace/v1;betraceb\x06proto3"

var (
	file_betrace_v1_rules_proto_rawDescOnce sync.Once
	file_betrace_v1_rules_proto_rawDescData []byte
)

func file_betrace_v1_rules_proto_rawDescGZIP() []byte {
	file_betrace_v1_rules_proto_rawDescOnce.Do(func() {
		file_betrace_v1_rules_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_betrace_v1_rules_proto_rawDesc), len(file_betrace_v1_rules_proto_rawDesc)))
	})
	return file_betrace_v1_rules_proto_rawDescData
}

var file_betrace_v1_rules_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_betrace_v1_rules_proto_goTypes = []any{
	(*Rule)(nil),                  // 0: betrace.v1.Rule
	(*ListRulesRequest)(nil),      // 1: betrace.v1.ListRulesRequest
	(*ListRulesResponse)(nil),     // 2: betrace.v1.ListRulesResponse
	(*GetRuleRequest)(nil),        // 3: betrace.v1.GetRuleRequest
	(*CreateRuleRequest)(nil),     // 4: betrace.v1.CreateRuleRequest
	(*UpdateRuleRequest)(nil),     // 5: betrace.v1.UpdateRuleRequest
	(*DeleteRuleRequest)(nil),     // 6: betrace.v1.DeleteRuleRequest
	(*DeleteRuleResponse)(nil),    // 7: betrace.v1.DeleteRuleResponse
	(*EnableRuleRequest)(nil),     // 8: betrace.v1.EnableRuleRequest
	(*DisableRuleRequest)(nil),    // 9: betrace.v1.DisableRuleRequest
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_betrace_v1_rules_proto_depIdxs = []int32{
	10, // 0: betrace.v1.Rule.created_at:type_name -> google.protobuf.Timestamp
	10, // 1: betrace.v1.Rule.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: betrace.v1.ListRulesResponse.rules:type_name -> betrace.v1.Rule
	1,  // 3: betrace.v1.RuleService.ListRules:input_type -> betrace.v1.ListRulesRequest
	3,  // 4: betrace.v1.RuleService.GetRule:input_type -> betrace.v1.GetRuleRequest
	4,  // 5: betrace.v1.RuleService.CreateRule:input_type -> betrace.v1.CreateRuleRequest
	5,  // 6: betrace.v1.RuleService.UpdateRule:input_type -> betrace.v1.UpdateRuleRequest
	6,  // 7: betrace.v1.RuleService.DeleteRule:input_type -> betrace.v1.DeleteRuleRequest
	8,  // 8: betrace.v1.RuleService.EnableRule:input_type -> betrace.v1.EnableRuleRequest
	9,  // 9: betrace.v1.RuleService.DisableRule:input_type -> betrace.v1.DisableRuleRequest
	2,  // 10: betrace.v1.RuleService.ListRules:output_type -> betrace.v1.ListRulesResponse
	0,  // 11: betrace.v1.RuleService.GetRule:output_type -> betrace.v1.Rule
	0,  // 12: betrace.v1.RuleService.CreateRule:output_type -> betrace.v1.Rule
	0,  // 13: betrace.v1.RuleService.UpdateRule:output_type -> betrace.v1.Rule
	7,  // 14: betrace.v1.RuleService.DeleteRule:output_type -> betrace.v1.DeleteRuleResponse
	0,  // 15: betrace.v1.RuleService.EnableRule:output_type -> betrace.v1.Rule
	0,  // 16: betrace.v1.RuleService.DisableRule:output_type -> betrace.v1.Rule
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_betrace_v1_rules_proto_init() }
func file_betrace_v1_rules_proto_init() {
	if File_betrace_v1_rules_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_betrace_v1_rules_proto_rawDesc), len(file_betrace_v1_rules_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_betrace_v1_rules_proto_goTypes,
		DependencyIndexes: file_betrace_v1_rules_proto_depIdxs,
		MessageInfos:      file_betrace_v1_rules_proto_msgTypes,
	}.Build()
	File_betrace_v1_rules_proto = out.File
	file_betrace_v1_rules_proto_goTypes = nil
	file_betrace_v1_rules_proto_depIdxs = nil
}
