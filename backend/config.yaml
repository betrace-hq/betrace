# BeTrace Backend Configuration
# All values can be overridden via environment variables: BETRACE_HTTP_PORT, etc.

# HTTP Server Configuration
# Respects Go stdlib net/http defaults where appropriate
http:
  port: 12011
  read_timeout: 30        # seconds (stdlib has no default, we add)
  write_timeout: 30       # seconds (stdlib has no default, we add)
  idle_timeout: 120       # seconds (stdlib has no default, we add)
  max_header_bytes: 32768 # 32KB (override stdlib 1MB default - too large)
  max_body_bytes: 10485760 # 10MB (stdlib has NO limit - dangerous!)
  shutdown_timeout: 10    # seconds for graceful shutdown

# gRPC Server Configuration
# OVERRIDES dangerous unlimited gRPC defaults
grpc:
  port: 12012
  max_recv_msg_size: 4194304       # 4MB (gRPC default, made explicit)
  max_send_msg_size: 4194304       # 4MB (gRPC default UNLIMITED - we limit!)
  max_concurrent_streams: 1000     # gRPC default UNLIMITED - we limit!
  connection_timeout: 120          # seconds (gRPC has no default - we add!)
  keepalive_time: 120             # seconds
  keepalive_timeout: 20           # seconds

# Storage Limits
storage:
  max_violations: 1000000  # 1M violations (~500MB in memory)
  max_rules: 100000        # 100K rules (~90MB in memory)
  # Note: max_rules also enforced by rule engine (defense in depth)

# Application-Level Limits
# Enforced BEFORE data reaches vendors (defense in depth)
limits:
  # Span ingestion limits (no vendor limits - pure application)
  spans:
    max_batch_size: 1000              # Spans per batch request
    max_attributes_per_span: 128      # Attributes per span
    max_attribute_key_length: 256     # Bytes
    max_attribute_value_length: 4096  # 4KB

  # Rule management limits (Participle parser has NO limits!)
  rules:
    max_expression_length: 65536   # 64KB (allows pathological rules)
    max_description_length: 4096   # 4KB
    max_name_length: 256           # Bytes
    max_rules_per_import: 1000     # Rules per YAML bulk import

  # Trace evaluation limits
  trace:
    max_spans_per_trace: 10000     # Spans in evaluation context
    evaluation_timeout: 5000       # 5 seconds (milliseconds)

# Rationale for "Ridiculous" Limits:
# - 1M violations: ~$5K/mo cloud cost if exceeded (fundable)
# - 100K rules: Far exceeds typical usage (10-100 rules per tenant)
# - 10MB body: Prevents trivial DoS while allowing large imports
# - 1000 spans/batch: Balances throughput vs memory
# - 64KB expression: Allows complex rules (benchmarked 40 conditions)
